{"version":3,"sources":["actions/PageActions.js","reducers/page.js","actions/UserActions.js","reducers/user.js","reducers/index.js","store/configureStore.js","components/User.js","components/Page.js","containers/App.js","serviceWorker.js","index.js"],"names":["GET_PHOTOS_REQUEST","GET_PHOTOS_SUCCESS","GET_PHOTOS_FAIL","photosArr","cached","makeYearPhotos","photos","selectedYear","yearPhotos","forEach","item","Date","date","getFullYear","push","sort","a","b","likes","count","getPhotos","year","dispatch","type","payload","getMorePhotos","offset","VK","Api","call","extended","v","r","concat","response","items","e","error","Error","initialState","isFetching","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","name","rootReducer","combineReducers","page","state","arguments","length","undefined","action","Object","objectSpread","message","user","store","createStore","applyMiddleware","thunk","logger","User","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","renderTemplate","_this$props","props","react_default","createElement","className","onClick","handleLogin","inherits","createClass","key","value","React","Component","Page","onBtnClick","currentTarget","innerText","map","entry","index","src","sizes","url","alt","_this$props2","App","getPhotosAction","handleLoginAction","Page_Page","User_User","connect","Auth","login","session","username","first_name","console","log","id","Boolean","window","location","hostname","match","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8f8e988.chunk.js","sourcesContent":["export const GET_PHOTOS_REQUEST = 'GET_PHOTOS_REQUEST'\r\nexport const GET_PHOTOS_SUCCESS = 'GET_PHOTOS_SUCCESS'\r\nexport const GET_PHOTOS_FAIL = 'GET_PHOTOS_FAIL'\r\n\r\nlet photosArr = []\r\nlet cached = false\r\n\r\nfunction makeYearPhotos(photos, selectedYear) {\r\n  let createdYear,\r\n    yearPhotos = []\r\n\r\n  photos.forEach(item => {\r\n    createdYear = new Date(item.date * 1000).getFullYear()\r\n    if (createdYear === selectedYear) {\r\n      yearPhotos.push(item)\r\n    }\r\n  })\r\n\r\n  yearPhotos.sort((a, b) => b.likes.count - a.likes.count)\r\n\r\n  return yearPhotos\r\n}\r\n\r\nfunction getMorePhotos(offset, count, year, dispatch) {\r\n  //eslint-disable-next-line no-undef\r\n  VK.Api.call(\r\n    'photos.getAll',\r\n    { extended: 1, count: count, offset: offset, v: '5.80' },\r\n    r => {\r\n      try {\r\n        photosArr = photosArr.concat(r.response.items)\r\n        if (offset <= r.response.count) {\r\n          offset += 200 // максимальное количество фото которое можно получить за 1 запрос\r\n          getMorePhotos(offset, count, year, dispatch)\r\n        } else {\r\n          let photos = makeYearPhotos(photosArr, year)\r\n          cached = true\r\n          dispatch({\r\n            type: GET_PHOTOS_SUCCESS,\r\n            payload: photos,\r\n          })\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_PHOTOS_FAIL,\r\n          error: true,\r\n          payload: new Error(e),\r\n        })\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport function getPhotos(year) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PHOTOS_REQUEST,\r\n      payload: year,\r\n    })\r\n\r\n    if (cached) {\r\n      let photos = makeYearPhotos(photosArr, year)\r\n      dispatch({\r\n        type: GET_PHOTOS_SUCCESS,\r\n        payload: photos,\r\n      })\r\n    } else {\r\n      getMorePhotos(0, 200, year, dispatch)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GET_PHOTOS_REQUEST,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_FAIL,\r\n} from '../actions/PageActions'\r\n\r\nconst initialState = {\r\n  year: 2018,\r\n  photos: [],\r\n  isFetching: false,\r\n  error: '',\r\n}\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PHOTOS_REQUEST:\r\n      return { ...state, year: action.payload, isFetching: true, error: '' }\r\n\r\n    case GET_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isFetching: false, error: '' }\r\n\r\n    case GET_PHOTOS_FAIL:\r\n      return { ...state, error: action.payload.message, isFetching: false }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport function handleLogin() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    })\r\n\r\n    //eslint-disable-next-line no-undef\r\n    VK.Auth.login(r => {\r\n      if (r.session) {\r\n        let username = r.session.user.first_name\r\n        console.log(r.session.user.id)\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: username,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          error: true,\r\n          payload: new Error('Ошибка авторизации'),\r\n        })\r\n      }\r\n    }, 4)\r\n  }\r\n}\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from '../actions/UserActions'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  error: '', // добавили для сохранения текста ошибки\r\n  isFetching: false, // добавили для реакции на статус \"загружаю\" или нет\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return { ...state, isFetching: true, error: '' }\r\n\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, name: action.payload }\r\n\r\n    case LOGIN_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload.message }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { pageReducer } from './page'\r\nimport { userReducer } from './user'\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  user: userReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class User extends React.Component {\r\n  renderTemplate = () => {\r\n    const { name, error, isFetching } = this.props\r\n\r\n    if (error) {\r\n      return <p>Во время запроса произошла ошибка, обновите страницу</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загружаю...</p>\r\n    }\r\n\r\n    if (name) {\r\n      return <p>Привет, {name}!</p>\r\n    } else {\r\n      return (\r\n        <button className=\"btn\" onClick={this.props.handleLogin}>\r\n          Войти\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return <div className=\"ib user\">{this.renderTemplate()}</div>\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Page extends React.Component {\r\n  onBtnClick = e => {\r\n    const year = +e.currentTarget.innerText\r\n    this.props.getPhotos(year)\r\n  }\r\n  renderTemplate = () => {\r\n    const { photos, isFetching, error } = this.props\r\n\r\n    if (error) {\r\n      return <p className=\"error\">Во время загрузки фото произошла ошибка</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загрузка...</p>\r\n    } else {\r\n      return photos.map((entry, index) => (\r\n        <div key={index} className=\"photo\">\r\n          <p>\r\n            <img src={entry.sizes[0].url} alt=\"\" />\r\n          </p>\r\n          <p>{entry.likes.count} ❤</p>\r\n        </div>\r\n      ))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { year, photos } = this.props\r\n    return (\r\n      <div className=\"ib page\">\r\n        <p>\r\n          <button className=\"btn\" onClick={this.onBtnClick}>\r\n            2018\r\n          </button>{' '}\r\n          <button className=\"btn\" onClick={this.onBtnClick}>\r\n            2017\r\n          </button>{' '}\r\n          <button className=\"btn\" onClick={this.onBtnClick}>\r\n            2016\r\n          </button>{' '}\r\n          <button className=\"btn\" onClick={this.onBtnClick}>\r\n            2015\r\n          </button>{' '}\r\n          <button className=\"btn\" onClick={this.onBtnClick}>\r\n            2014\r\n          </button>\r\n        </p>\r\n        <h3>\r\n          {year} год [{photos.length}]\r\n        </h3>\r\n        {this.renderTemplate()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPage.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  photos: PropTypes.array.isRequired,\r\n  getPhotos: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { User } from '../components/User'\r\nimport { Page } from '../components/Page'\r\nimport { getPhotos } from '../actions/PageActions'\r\nimport { handleLogin } from '../actions/UserActions'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { user, page, getPhotosAction, handleLoginAction } = this.props\r\n    return (\r\n      <div className=\"app\">\r\n        <Page\r\n          photos={page.photos}\r\n          year={page.year}\r\n          error={page.error}\r\n          isFetching={page.isFetching}\r\n          getPhotos={getPhotosAction}\r\n        />\r\n        <User\r\n          name={user.name}\r\n          isFetching={user.isFetching}\r\n          error={user.error}\r\n          handleLogin={handleLoginAction}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user,\r\n    page: store.page,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPhotosAction: year => dispatch(getPhotos(year)),\r\n\r\n    handleLoginAction: () => dispatch(handleLogin()),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/configureStore'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}